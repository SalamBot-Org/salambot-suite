# @file        Configuration CI/CD pour le monorepo SalamBot
# @author      SalamBot Team (contact: info@salambot.ma)
# @created     2025-05-25
# @updated     2025-05-25
# @project     SalamBot - AI CRM for Moroccan SMEs

name: SalamBot CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4

      - name: Lint
        run: pnpm lint

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4

      - name: Start Mock Services
        run: |
          chmod +x scripts/start-mock-services.sh
          ./scripts/start-mock-services.sh
        working-directory: .

      - name: Test
        run: pnpm test
        env:
          # Ensure tests know mock services are available
          MOCK_SERVICES_ENABLED: true
          MOCK_GENKIT_PORT: 3001
          MOCK_REST_API_PORT: 3002
          MOCK_WEBSOCKET_PORT: 3003
          MOCK_PROMETHEUS_PORT: 3004

      - name: Stop Mock Services
        if: always()
        run: |
          chmod +x scripts/stop-mock-services.sh
          ./scripts/stop-mock-services.sh
        working-directory: .

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4

      - name: Build
        run: pnpm build

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: pnpm/action-setup@v4
        with:
          version: 10
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4

      - name: Security Audit
        run: |
          echo "üîç Running security audit..."
          pnpm audit --audit-level moderate
          if [ $? -ne 0 ]; then
            echo "‚ö†Ô∏è Security vulnerabilities detected!"
            echo "Please run 'pnpm audit --fix' to resolve them."
            exit 1
          else
            echo "‚úÖ No security vulnerabilities found."
          fi

      - name: Check for outdated dependencies
        run: |
          echo "üì¶ Checking for outdated dependencies..."
          pnpm outdated || echo "Some dependencies are outdated. Consider updating them."
