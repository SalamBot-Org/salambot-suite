# =============================================================================
# SalamBot API Gateway Enterprise - Nginx Configuration
# =============================================================================

# Optimisations globales
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configuration des événements
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# Configuration HTTP
http {
    # Types MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Optimisations de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Gestion des buffers
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    gzip_disable "MSIE [1-6]\."; 

    # Format de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    log_format json escape=json
        '{'
            '"timestamp":"$time_iso8601",' 
            '"remote_addr":"$remote_addr",' 
            '"request_method":"$request_method",' 
            '"request_uri":"$request_uri",' 
            '"status":$status,' 
            '"body_bytes_sent":$body_bytes_sent,' 
            '"request_time":$request_time,' 
            '"upstream_response_time":"$upstream_response_time",' 
            '"user_agent":"$http_user_agent",' 
            '"x_forwarded_for":"$http_x_forwarded_for"' 
        '}';

    access_log /var/log/nginx/access.log json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=ai:10m rate=2r/s;

    # Upstream pour l'API Gateway
    upstream salambot_gateway {
        least_conn;
        server salambot-gateway:3000 max_fails=3 fail_timeout=30s;
        # Ajoutez d'autres instances ici pour la haute disponibilité
        # server salambot-gateway-2:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Upstream pour Prometheus
    upstream prometheus {
        server salambot-prometheus:9090;
    }

    # Upstream pour Grafana
    upstream grafana {
        server salambot-grafana:3000;
    }

    # Configuration SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Headers de sécurité
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self' wss: https:; frame-ancestors 'none';" always;

    # ==========================================================================
    # Serveur principal - API Gateway
    # ==========================================================================
    server {
        listen 80;
        listen [::]:80;
        server_name api.salambot.local salambot.local;

        # Redirection HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.salambot.local salambot.local;

        # Certificats SSL
        ssl_certificate /etc/nginx/ssl/salambot.crt;
        ssl_certificate_key /etc/nginx/ssl/salambot.key;

        # Health check simple
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API Gateway - Routes générales
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://salambot_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
        }

        # Routes d'authentification - Rate limiting strict
        location /auth {
            limit_req zone=auth burst=10 nodelay;
            
            proxy_pass http://salambot_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Routes IA - Rate limiting pour les requêtes coûteuses
        location /ai {
            limit_req zone=ai burst=5 nodelay;
            
            proxy_pass http://salambot_gateway;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            proxy_buffering off;
        }

        # WebSocket support
        location /ws {
            proxy_pass http://salambot_gateway;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }

        # Métriques - Accès restreint
        location /metrics {
            allow 172.20.0.0/16;  # Réseau Docker
            allow 127.0.0.1;
            deny all;
            
            proxy_pass http://salambot_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # ==========================================================================
    # Serveur Prometheus
    # ==========================================================================
    server {
        listen 80;
        server_name prometheus.salambot.local;

        location / {
            allow 172.20.0.0/16;
            allow 127.0.0.1;
            deny all;
            
            proxy_pass http://prometheus;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # ==========================================================================
    # Serveur Grafana
    # ==========================================================================
    server {
        listen 80;
        server_name grafana.salambot.local;

        location / {
            proxy_pass http://grafana;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Support pour les WebSockets de Grafana
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }

    # ==========================================================================
    # Configuration des variables
    # ==========================================================================
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # ==========================================================================
    # Serveur par défaut (catch-all)
    # ==========================================================================
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        
        return 444;  # Ferme la connexion sans réponse
    }
}